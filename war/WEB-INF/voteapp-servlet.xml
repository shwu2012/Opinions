<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!-- Include basic annotation support -->
	<context:annotation-config />

	<!-- - The controllers are autodetected POJOs labeled with the @Controller 
		annotation. -->
	<!-- <context:component-scan base-package="edu.sjsu.students.shuangwu.opinions.web" 
		/> -->

	<bean id="VoteAppController"
		class="edu.sjsu.students.shuangwu.opinions.web.VoteAppController">
		<property name="voteService" ref="voteService" />
		<property name="userService" ref="userService" />
		<property name="fbApiKey" value="217557015023052" />
		<property name="fbApiSecret" value="95e9f86c79ae95a9937be07704d94e0f" />
		<property name="fbLoginCallbackUrl" value="http://localhost:8888/facebookLogin.do" />
	</bean>

	<bean id="annotationMapper"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="userLoginHandlerInterceptorAdapter" />
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<bean id="userLoginHandlerInterceptorAdapter"
		class="edu.sjsu.students.shuangwu.opinions.web.UserLoginHandlerInterceptorAdapter">
		<property name="publicUrls">
			<set>
				<value>/login.do</value>
				<value>/question.do</value>
				<value>/facebookLogin.do</value>
				<value>/facebookAppCanvas.do</value>
			</set>
		</property>
	</bean>

	<!-- - This bean resolves specific types of exceptions to corresponding 
		logical - view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions. -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">dataAccessFailure</prop>
			</props>
		</property>
	</bean>

	<!-- - This bean configures the 'prefix' and 'suffix' properties of - InternalResourceViewResolver, 
		which resolves logical view names - returned by Controllers. For example, 
		a logical view name of "vets" - will be mapped to "/WEB-INF/jsp/vets.jsp". -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

	<!-- - Message source for this context, loaded from localized "messages_xx" 
		files. - Could also reside in the root application context, as it is generic, 
		- but is currently just used within PetClinic's web tier. -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages" />

	<bean id="userValidator"
		class="edu.sjsu.students.shuangwu.opinions.validator.UserValidator">
		<property name="emailAddressValidator" ref="emailAddressValidator" />
	</bean>

	<bean id="emailAddressValidator"
		class="edu.sjsu.students.shuangwu.opinions.validator.EmailAddressValidator" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="500000" />
	</bean>
</beans>
